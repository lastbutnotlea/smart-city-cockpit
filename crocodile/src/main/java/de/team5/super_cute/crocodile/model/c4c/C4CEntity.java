package de.team5.super_cute.crocodile.model.c4c;

import com.fasterxml.jackson.annotation.JsonIgnore;
import de.team5.super_cute.crocodile.external.C4CProperty;
import de.team5.super_cute.crocodile.model.IdentifiableObject;
import javax.persistence.MappedSuperclass;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

/**
 * Base Class for all Entities that should be serialized to SAP C4C Objects.
 * Use @C4CProperty to mark as which C4C Attribute a field should be saved.
 */
@MappedSuperclass
public abstract class C4CEntity extends IdentifiableObject {
  /**
   * Should not be set in Code, is generated by the C4C Automatically
   */
  @C4CProperty(name = "ObjectID")
  private String objectId;

  /**
   * @return the name of the collection (e.g. "ObjectCollection") in which the Objects of the corresponding Type are saved.
   */
  @JsonIgnore
  public abstract String getCollectionName();

  /**
   * @return a default object of the class (convenience for reflection)
   */
  @JsonIgnore
  public abstract C4CEntity getEmptyObject();

  public String getObjectId() {
    return objectId;
  }

  public void setObjectId(String objectId) {
    this.objectId = objectId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }

    if (!(o instanceof C4CEntity)) {
      return false;
    }

    C4CEntity c4CEntity = (C4CEntity) o;

    return new EqualsBuilder()
        .append(getObjectId(), c4CEntity.getObjectId())
        .isEquals();
  }

  @Override
  public int hashCode() {
    return new HashCodeBuilder(17, 37)
        .append(getObjectId())
        .toHashCode();
  }

  @Override
  public String toString() {
    return new ToStringBuilder(this)
        .append("objectId", objectId)
        .toString();
  }
}
